@import "../abstracts/mixins";
@import "../abstracts/variables";


.pagination {
  width: 100%;
  background-color: transparent;

  &-container {
    //  padding: 100px 0 150px 0;
    @media (max-width: $breakpoint-lg) {
      //   padding-bottom: 100px;
    }
  }

  & .screen-reader-text {
    display: none;
  }

  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;

  & .nav-links {
    position: relative;
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-flow: row wrap;
    flex-flow: row wrap;
    -webkit-box-align: center;
    -webkit-align-items: center;
    -ms-flex-align: center;
    align-items: center;

    .page-numbers {
      display: flex;
      -webkit-box-pack: center;
      -ms-flex-pack: center;
      justify-content: center;
      -webkit-box-align: center;
      -ms-flex-align: center;
      align-items: center;

      font-size: 16px;
      font-weight: 300;
      text-align: center;
      color: #29140C;
      width: 40px;
      height: 40px;

      border-radius: 10px;
      cursor: pointer;
      @include transition(.4);
      margin: 0 5px;

      background: #fff;
      border: 1px solid transparent;
      position: relative;
      background-clip: padding-box;
      &::after {
        content: '';
        position: absolute;
        top: -1px;
        bottom: -1px;
        left: -1px;
        right: -1px;
        background: linear-gradient(88.24deg, #CFCFCF 0%, #938C89 100%);
        z-index: -1;
        border-radius: 10px;
      }
      & i {
        @include fontSize(12, 14);
      }


      &.next, &.prev {
        & img {
          width: 6px;
          @include transition(.5);
          transform: translateX(0);
        }
      }

      &.next {
        &:hover {
          & img {
            transform: translateX(10px);
          }
        }
      }

      &.prev {
        &:hover {
          & img {
            transform: translateX(-10px);
          }
        }
      }

      &.current {
        background-color: transparent;
        color: $whiteColor;
      }

      &:not(.next,.prev):hover {
        background-color: transparent;
        color: $whiteColor;
      }
    }
  }
}
